"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateAttendeeCapabilitiesResponseFilterSensitiveLog = exports.ListAttendeesResponseFilterSensitiveLog = exports.GetMeetingResponseFilterSensitiveLog = exports.GetAttendeeResponseFilterSensitiveLog = exports.CreateMeetingWithAttendeesResponseFilterSensitiveLog = exports.CreateMeetingWithAttendeesRequestFilterSensitiveLog = exports.CreateMeetingResponseFilterSensitiveLog = exports.MeetingFilterSensitiveLog = exports.CreateMeetingRequestFilterSensitiveLog = exports.NotificationsConfigurationFilterSensitiveLog = exports.CreateAttendeeResponseFilterSensitiveLog = exports.CreateAttendeeRequestFilterSensitiveLog = exports.BatchCreateAttendeeResponseFilterSensitiveLog = exports.CreateAttendeeErrorFilterSensitiveLog = exports.BatchCreateAttendeeRequestFilterSensitiveLog = exports.CreateAttendeeRequestItemFilterSensitiveLog = exports.AttendeeFilterSensitiveLog = exports.TooManyTagsException = exports.TranscribeVocabularyFilterMethod = exports.TranscribeRegion = exports.TranscribePartialResultsStability = exports.TranscribeLanguageCode = exports.TranscribeContentRedactionType = exports.TranscribeContentIdentificationType = exports.TranscribeMedicalType = exports.TranscribeMedicalSpecialty = exports.TranscribeMedicalRegion = exports.TranscribeMedicalLanguageCode = exports.TranscribeMedicalContentIdentificationType = exports.ResourceNotFoundException = exports.VideoResolution = exports.ContentResolution = exports.ConflictException = exports.UnprocessableEntityException = exports.UnauthorizedException = exports.ThrottlingException = exports.ServiceUnavailableException = exports.ServiceFailureException = exports.NotFoundException = exports.LimitExceededException = exports.ForbiddenException = exports.BadRequestException = exports.MeetingFeatureStatus = exports.MediaCapabilities = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const ChimeSDKMeetingsServiceException_1 = require("./ChimeSDKMeetingsServiceException");
exports.MediaCapabilities = {
    NONE: "None",
    RECEIVE: "Receive",
    SEND: "Send",
    SEND_RECEIVE: "SendReceive",
};
exports.MeetingFeatureStatus = {
    AVAILABLE: "AVAILABLE",
    UNAVAILABLE: "UNAVAILABLE",
};
class BadRequestException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.BadRequestException = BadRequestException;
class ForbiddenException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.ForbiddenException = ForbiddenException;
class LimitExceededException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.LimitExceededException = LimitExceededException;
class NotFoundException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.NotFoundException = NotFoundException;
class ServiceFailureException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "ServiceFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceFailureException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.ServiceFailureException = ServiceFailureException;
class ServiceUnavailableException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
        this.RetryAfterSeconds = opts.RetryAfterSeconds;
    }
}
exports.ServiceUnavailableException = ServiceUnavailableException;
class ThrottlingException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.ThrottlingException = ThrottlingException;
class UnauthorizedException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.UnauthorizedException = UnauthorizedException;
class UnprocessableEntityException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "UnprocessableEntityException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnprocessableEntityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnprocessableEntityException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.UnprocessableEntityException = UnprocessableEntityException;
class ConflictException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
exports.ConflictException = ConflictException;
exports.ContentResolution = {
    FHD: "FHD",
    NONE: "None",
    UHD: "UHD",
};
exports.VideoResolution = {
    FHD: "FHD",
    HD: "HD",
    NONE: "None",
};
class ResourceNotFoundException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
        this.ResourceName = opts.ResourceName;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
exports.TranscribeMedicalContentIdentificationType = {
    PHI: "PHI",
};
exports.TranscribeMedicalLanguageCode = {
    EN_US: "en-US",
};
exports.TranscribeMedicalRegion = {
    AP_SOUTHEAST_2: "ap-southeast-2",
    AUTO: "auto",
    CA_CENTRAL_1: "ca-central-1",
    EU_WEST_1: "eu-west-1",
    US_EAST_1: "us-east-1",
    US_EAST_2: "us-east-2",
    US_WEST_2: "us-west-2",
};
exports.TranscribeMedicalSpecialty = {
    CARDIOLOGY: "CARDIOLOGY",
    NEUROLOGY: "NEUROLOGY",
    ONCOLOGY: "ONCOLOGY",
    PRIMARYCARE: "PRIMARYCARE",
    RADIOLOGY: "RADIOLOGY",
    UROLOGY: "UROLOGY",
};
exports.TranscribeMedicalType = {
    CONVERSATION: "CONVERSATION",
    DICTATION: "DICTATION",
};
exports.TranscribeContentIdentificationType = {
    PII: "PII",
};
exports.TranscribeContentRedactionType = {
    PII: "PII",
};
exports.TranscribeLanguageCode = {
    DE_DE: "de-DE",
    EN_AU: "en-AU",
    EN_GB: "en-GB",
    EN_US: "en-US",
    ES_US: "es-US",
    FR_CA: "fr-CA",
    FR_FR: "fr-FR",
    HI_IN: "hi-IN",
    IT_IT: "it-IT",
    JA_JP: "ja-JP",
    KO_KR: "ko-KR",
    PT_BR: "pt-BR",
    TH_TH: "th-TH",
    ZH_CN: "zh-CN",
};
exports.TranscribePartialResultsStability = {
    HIGH: "high",
    LOW: "low",
    MEDIUM: "medium",
};
exports.TranscribeRegion = {
    AP_NORTHEAST_1: "ap-northeast-1",
    AP_NORTHEAST_2: "ap-northeast-2",
    AP_SOUTHEAST_2: "ap-southeast-2",
    AUTO: "auto",
    CA_CENTRAL_1: "ca-central-1",
    EU_CENTRAL_1: "eu-central-1",
    EU_WEST_1: "eu-west-1",
    EU_WEST_2: "eu-west-2",
    SA_EAST_1: "sa-east-1",
    US_EAST_1: "us-east-1",
    US_EAST_2: "us-east-2",
    US_GOV_WEST_1: "us-gov-west-1",
    US_WEST_2: "us-west-2",
};
exports.TranscribeVocabularyFilterMethod = {
    MASK: "mask",
    REMOVE: "remove",
    TAG: "tag",
};
class TooManyTagsException extends ChimeSDKMeetingsServiceException_1.ChimeSDKMeetingsServiceException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.Code = opts.Code;
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
        this.ResourceName = opts.ResourceName;
    }
}
exports.TooManyTagsException = TooManyTagsException;
const AttendeeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.JoinToken && { JoinToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.AttendeeFilterSensitiveLog = AttendeeFilterSensitiveLog;
const CreateAttendeeRequestItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateAttendeeRequestItemFilterSensitiveLog = CreateAttendeeRequestItemFilterSensitiveLog;
const BatchCreateAttendeeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => (0, exports.CreateAttendeeRequestItemFilterSensitiveLog)(item)) }),
});
exports.BatchCreateAttendeeRequestFilterSensitiveLog = BatchCreateAttendeeRequestFilterSensitiveLog;
const CreateAttendeeErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateAttendeeErrorFilterSensitiveLog = CreateAttendeeErrorFilterSensitiveLog;
const BatchCreateAttendeeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => (0, exports.AttendeeFilterSensitiveLog)(item)) }),
    ...(obj.Errors && { Errors: obj.Errors.map((item) => (0, exports.CreateAttendeeErrorFilterSensitiveLog)(item)) }),
});
exports.BatchCreateAttendeeResponseFilterSensitiveLog = BatchCreateAttendeeResponseFilterSensitiveLog;
const CreateAttendeeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExternalUserId && { ExternalUserId: smithy_client_1.SENSITIVE_STRING }),
});
exports.CreateAttendeeRequestFilterSensitiveLog = CreateAttendeeRequestFilterSensitiveLog;
const CreateAttendeeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: (0, exports.AttendeeFilterSensitiveLog)(obj.Attendee) }),
});
exports.CreateAttendeeResponseFilterSensitiveLog = CreateAttendeeResponseFilterSensitiveLog;
const NotificationsConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LambdaFunctionArn && { LambdaFunctionArn: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SnsTopicArn && { SnsTopicArn: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SqsQueueArn && { SqsQueueArn: smithy_client_1.SENSITIVE_STRING }),
});
exports.NotificationsConfigurationFilterSensitiveLog = NotificationsConfigurationFilterSensitiveLog;
const CreateMeetingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientRequestToken && { ClientRequestToken: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.MeetingHostId && { MeetingHostId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ExternalMeetingId && { ExternalMeetingId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.NotificationsConfiguration && {
        NotificationsConfiguration: (0, exports.NotificationsConfigurationFilterSensitiveLog)(obj.NotificationsConfiguration),
    }),
});
exports.CreateMeetingRequestFilterSensitiveLog = CreateMeetingRequestFilterSensitiveLog;
const MeetingFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MeetingHostId && { MeetingHostId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ExternalMeetingId && { ExternalMeetingId: smithy_client_1.SENSITIVE_STRING }),
});
exports.MeetingFilterSensitiveLog = MeetingFilterSensitiveLog;
const CreateMeetingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Meeting && { Meeting: (0, exports.MeetingFilterSensitiveLog)(obj.Meeting) }),
});
exports.CreateMeetingResponseFilterSensitiveLog = CreateMeetingResponseFilterSensitiveLog;
const CreateMeetingWithAttendeesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientRequestToken && { ClientRequestToken: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.MeetingHostId && { MeetingHostId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ExternalMeetingId && { ExternalMeetingId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.NotificationsConfiguration && {
        NotificationsConfiguration: (0, exports.NotificationsConfigurationFilterSensitiveLog)(obj.NotificationsConfiguration),
    }),
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => (0, exports.CreateAttendeeRequestItemFilterSensitiveLog)(item)) }),
});
exports.CreateMeetingWithAttendeesRequestFilterSensitiveLog = CreateMeetingWithAttendeesRequestFilterSensitiveLog;
const CreateMeetingWithAttendeesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Meeting && { Meeting: (0, exports.MeetingFilterSensitiveLog)(obj.Meeting) }),
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => (0, exports.AttendeeFilterSensitiveLog)(item)) }),
    ...(obj.Errors && { Errors: obj.Errors.map((item) => (0, exports.CreateAttendeeErrorFilterSensitiveLog)(item)) }),
});
exports.CreateMeetingWithAttendeesResponseFilterSensitiveLog = CreateMeetingWithAttendeesResponseFilterSensitiveLog;
const GetAttendeeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: (0, exports.AttendeeFilterSensitiveLog)(obj.Attendee) }),
});
exports.GetAttendeeResponseFilterSensitiveLog = GetAttendeeResponseFilterSensitiveLog;
const GetMeetingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Meeting && { Meeting: (0, exports.MeetingFilterSensitiveLog)(obj.Meeting) }),
});
exports.GetMeetingResponseFilterSensitiveLog = GetMeetingResponseFilterSensitiveLog;
const ListAttendeesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendees && { Attendees: obj.Attendees.map((item) => (0, exports.AttendeeFilterSensitiveLog)(item)) }),
});
exports.ListAttendeesResponseFilterSensitiveLog = ListAttendeesResponseFilterSensitiveLog;
const UpdateAttendeeCapabilitiesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: (0, exports.AttendeeFilterSensitiveLog)(obj.Attendee) }),
});
exports.UpdateAttendeeCapabilitiesResponseFilterSensitiveLog = UpdateAttendeeCapabilitiesResponseFilterSensitiveLog;
