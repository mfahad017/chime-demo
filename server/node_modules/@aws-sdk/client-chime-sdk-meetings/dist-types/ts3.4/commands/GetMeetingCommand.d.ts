import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ChimeSDKMeetingsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMeetingsClient";
import { GetMeetingRequest, GetMeetingResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetMeetingCommandInput extends GetMeetingRequest {}
export interface GetMeetingCommandOutput
  extends GetMeetingResponse,
    __MetadataBearer {}
export declare class GetMeetingCommand extends $Command<
  GetMeetingCommandInput,
  GetMeetingCommandOutput,
  ChimeSDKMeetingsClientResolvedConfig
> {
  readonly input: GetMeetingCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetMeetingCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ChimeSDKMeetingsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetMeetingCommandInput, GetMeetingCommandOutput>;
  private serialize;
  private deserialize;
}
