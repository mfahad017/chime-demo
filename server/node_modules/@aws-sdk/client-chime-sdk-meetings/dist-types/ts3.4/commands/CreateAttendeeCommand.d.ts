import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ChimeSDKMeetingsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMeetingsClient";
import {
  CreateAttendeeRequest,
  CreateAttendeeResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateAttendeeCommandInput extends CreateAttendeeRequest {}
export interface CreateAttendeeCommandOutput
  extends CreateAttendeeResponse,
    __MetadataBearer {}
export declare class CreateAttendeeCommand extends $Command<
  CreateAttendeeCommandInput,
  CreateAttendeeCommandOutput,
  ChimeSDKMeetingsClientResolvedConfig
> {
  readonly input: CreateAttendeeCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateAttendeeCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ChimeSDKMeetingsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateAttendeeCommandInput, CreateAttendeeCommandOutput>;
  private serialize;
  private deserialize;
}
