import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ChimeSDKMeetingsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMeetingsClient";
import {
  CreateMeetingRequest,
  CreateMeetingResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateMeetingCommandInput extends CreateMeetingRequest {}
export interface CreateMeetingCommandOutput
  extends CreateMeetingResponse,
    __MetadataBearer {}
export declare class CreateMeetingCommand extends $Command<
  CreateMeetingCommandInput,
  CreateMeetingCommandOutput,
  ChimeSDKMeetingsClientResolvedConfig
> {
  readonly input: CreateMeetingCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateMeetingCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ChimeSDKMeetingsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateMeetingCommandInput, CreateMeetingCommandOutput>;
  private serialize;
  private deserialize;
}
